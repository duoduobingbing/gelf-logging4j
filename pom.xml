<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

<!--    <parent>-->
<!--        <groupId>org.sonatype.oss</groupId>-->
<!--        <artifactId>oss-parent</artifactId>-->
<!--        <version>9</version>-->
<!--    </parent>-->

    <groupId>io.github.duoduobingbing</groupId>
    <version>2.0.0-SNAPSHOT</version>
    <artifactId>gelf-logging4j</artifactId>

    <name>gelf logging connectors</name>
    <url>https://github.com/duoduobingbing/gelf-logging4j</url>
    <inceptionYear>2013</inceptionYear>

    <scm>
        <connection>scm:git://github.com/duoduobingbing/gelf-logging4j.git</connection>
        <developerConnection>scm:git:git@github.com:duoduobingbing/gelf-logging4j.git</developerConnection>
        <url>http://github.com/duoduobingbing/gelf-logging4j/</url>
        <tag>HEAD</tag>
    </scm>

    <issueManagement>
        <system>GitHub</system>
        <url>http://github.com/duoduobingbing/gelf-logging4j/issues</url>
    </issueManagement>

    <licenses>
        <license>
            <name>MIT License</name>
            <url>http://www.opensource.org/licenses/mit-license.php</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <distributionManagement>
        <snapshotRepository>
            <id>sonatype-nexus-snapshots</id>
            <name>Sonatype Nexus Snapshots</name>
            <url>https://oss.sonatype.org/content/repositories/snapshots</url>
        </snapshotRepository>
        <repository>
            <id>sonatype-nexus-staging</id>
            <name>Sonatype Nexus Staging</name>
            <url>https://oss.sonatype.org/service/local/staging/deploy/maven2</url>
        </repository>
    </distributionManagement>

    <repositories>
        <repository>
            <id>sonatype-nexus-snapshots</id>
            <name>Sonatype Nexus Snapshots</name>
            <url>https://oss.sonatype.org/content/repositories/snapshots</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>public-jboss</id>
            <url>https://repository.jboss.org/nexus/content/groups/public-jboss</url>
        </repository>
    </repositories>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <maven.compiler.release>21</maven.compiler.release>
<!--        <maven.compiler.source>21</maven.compiler.source>-->
<!--        <maven.compiler.target>21</maven.compiler.target>-->

        <github.site.upload.skip>true</github.site.upload.skip>
<!--        <test.withRedis>false</test.withRedis>-->

        <!-- Versions -->
<!--        <log4j.version>1.2.17</log4j.version>-->
        <log4j2.version>2.25.2</log4j2.version>
        <junit5.version>5.13.4</junit5.version>
        <assertj.version>3.27.6</assertj.version>
        <mockito.version>5.20.0</mockito.version>
        <jackson.version>2.20.0</jackson.version>
        <jedis.version>6.2.0</jedis.version>
        <commons-pool2.version>2.12.1</commons-pool2.version>
        <slf4j-api.version>2.0.17</slf4j-api.version>
        <logback-classic.version>1.5.18</logback-classic.version>
        <org.jboss.logmanager.version>3.1.2.Final</org.jboss.logmanager.version>

<!--        <site-plugin.version>3.10.0</site-plugin.version>-->
        <maven-javadoc-plugin.version>3.5.0</maven-javadoc-plugin.version>
        <maven-surefire-plugin.version>3.5.3</maven-surefire-plugin.version>
        <maven-failsafe-plugin.version>3.5.3</maven-failsafe-plugin.version>
        <doxia-module-markdown.version>1.12.0</doxia-module-markdown.version>
        <maven-project-info-reports-plugin.version>3.9.0</maven-project-info-reports-plugin.version>
        <maven-release-plugin.version>3.0.1</maven-release-plugin.version>
        <netty-bom.version>4.2.6.Final</netty-bom.version>
        <maven-scm-publish-plugin.version>3.2.1</maven-scm-publish-plugin.version>
<!--        <tempus-fugit.version>1.1</tempus-fugit.version>-->
        <maven-assembly-plugin.version>3.6.0</maven-assembly-plugin.version>
        <maven-compiler-plugin.version>3.14.1</maven-compiler-plugin.version>
        <maven-dependency-plugin.version>3.6.0</maven-dependency-plugin.version>
        <maven-scm-provider-gitexe.version>2.0.1</maven-scm-provider-gitexe.version>
        <maven-resources-plugin.version>3.3.1</maven-resources-plugin.version>
        <maven.jacoco.version>0.8.7</maven.jacoco.version>
        <kafka-clients.version>3.6.0</kafka-clients.version>
        <kafka-junit.version>4.2.10</kafka-junit.version>

        <bouncycastle.version>1.82</bouncycastle.version>
        <testcontainers.version>1.21.3</testcontainers.version>

        <argLine/>
    </properties>

    <developers>
        <developer>
            <name>duoduobingbing</name>
            <url>https://github.com/duoduobingbing</url>
        </developer>
        <developer>
            <email>mpaluch@paluch.biz</email>
            <name>Mark Paluch</name>
            <timezone>Europe/Berlin</timezone>
            <url>http://www.paluch.biz</url>
            <properties>
                <info>original developer of logstash-gelf, not involved in gelf-logging4j</info>
            </properties>
        </developer>
    </developers>

    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>

        <testResources>
            <testResource>
                <directory>src/test/resources</directory>
                <filtering>false</filtering>
            </testResource>
        </testResources>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>${maven-dependency-plugin.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>properties</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>${maven-assembly-plugin.version}</version>
                <executions>
                    <execution>
                        <id>dist-assembly</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <descriptors>
                        <descriptor>src/main/assembly/assembly.xml</descriptor>
                    </descriptors>
                    <attach>true</attach>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>versions-maven-plugin</artifactId>
                <version>2.18.0</version>
                <executions>
                    <execution>
                        <id>default-cli</id>
                        <phase>package</phase>
                        <goals>
                            <goal>display-dependency-updates</goal>
                        </goals>
                        <configuration>
                            <processDependencyManagementTransitive>false</processDependencyManagementTransitive>
                            <ruleSet>
                                <ignoreVersions>
                                    <ignoreVersion>
                                        <type>regex</type>
                                        <version>.+-?(SNAPSHOT|M|[Aa]lpha|[bB]eta|RC)\d?$</version>
                                    </ignoreVersion>
                                </ignoreVersions>
                            </ruleSet>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- SEE https://logging.apache.org/log4j/2.x/manual/plugins.html#declare-plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <release>${maven.compiler.release}</release>
<!--                    <release>${java.version}</release>-->
                    <compilerArgs>
                        <!-- Provide the project coordinates to `GraalVmProcessor`: -->
<!--                        <arg>-Alog4j.graalvm.groupId=${project.groupId}</arg>-->
<!--                        <arg>-Alog4j.graalvm.artifactId=${project.artifactId}</arg>-->
                    </compilerArgs>
                    <annotationProcessorPaths>
                        <!-- Include `log4j-core` providing
                             1. `org.apache.logging.log4j.core.config.plugins.processor.PluginProcessor` that generates `Log4j2Plugins.dat`
                             2. `org.apache.logging.log4j.core.config.plugins.processor.GraalVmProcessor` that generates the GraalVM reachability metadata file -->
                        <path>
                            <groupId>org.apache.logging.log4j</groupId>
                            <artifactId>log4j-core</artifactId>
                            <version>${log4j2.version}</version>
                        </path>
                    </annotationProcessorPaths>
                    <!--
                      ~ Explicitly list the annotation processors for the default compile execution.
                      ~ This is required starting with JDK 23, where annotation processors are not enabled automatically.
                      ~ Explicit configuration also improves build reliability and clarity.
                      ~ For more details, see: https://inside.java/2024/06/18/quality-heads-up/
                      -->
                    <annotationProcessors>
                        <!-- Process sources using `PluginProcessor` to generate `Log4j2Plugins.dat` -->
                        <processor>org.apache.logging.log4j.core.config.plugins.processor.PluginProcessor</processor>
                        <!-- Process sources using `GraalVmProcessor` to generate a GraalVM reachability metadata file -->
                        <!-- disabled for now because it generates a warning with testCompile, see https://github.com/duoduobingbing/gelf-logging4j/pull/18 for details -->
<!--                        <processor>org.apache.logging.log4j.core.config.plugins.processor.GraalVmProcessor</processor>-->
                    </annotationProcessors>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>${maven-javadoc-plugin.version}</version>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven-surefire-plugin.version}</version>
                <configuration>
                    <argLine>@{argLine} -javaagent:${org.mockito:mockito-core:jar} -Dstdout.encoding=UTF-8 -Dstdin.encoding=UTF-8 -Dstderr.encoding=UTF-8</argLine>
                    <redirectTestOutputToFile>true</redirectTestOutputToFile>
                    <includes>
                        <include>**/*Test.java</include>
                        <include>**/*Tests.java</include>
                    </includes>
                    <excludes>
                        <exclude>**/*IntegrationTests.java</exclude>
                        <exclude>**/*IntegrationTest.java</exclude>
                    </excludes>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>${maven-failsafe-plugin.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                        <configuration>
                            <argLine>@{argLine} -javaagent:${org.mockito:mockito-core:jar} -Dstdout.encoding=UTF-8 -Dstdin.encoding=UTF-8 -Dstderr.encoding=UTF-8</argLine>
                            <redirectTestOutputToFile>true</redirectTestOutputToFile>
                            <includes>
                                <include>**/*IntegrationTests.java</include>
                                <include>**/*IntegrationTest.java</include>
                            </includes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
                <version>${maven-release-plugin.version}</version>
                <configuration>
                    <releaseProfiles>sonatype-oss-release</releaseProfiles>
                    <goals>deploy</goals>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>${maven-resources-plugin.version}</version>
            </plugin>

<!--            <plugin>-->
<!--                <groupId>org.apache.maven.plugins</groupId>-->
<!--                <artifactId>maven-site-plugin</artifactId>-->
<!--                <version>${site-plugin.version}</version>-->
<!--                <configuration>-->
<!--                    <relativizeDecorationLinks>false</relativizeDecorationLinks>-->
<!--                </configuration>-->
<!--                <dependencies>-->
<!--                    <dependency>-->
<!--                        <groupId>org.apache.maven.doxia</groupId>-->
<!--                        <artifactId>doxia-module-markdown</artifactId>-->
<!--                        <version>${doxia-module-markdown.version}</version>-->
<!--                    </dependency>-->
<!--                    <dependency>-->
<!--                        <groupId>org.apache.maven.scm</groupId>-->
<!--                        <artifactId>maven-scm-provider-gitexe</artifactId>-->
<!--                        <version>${maven-scm-provider-gitexe.version}</version>-->
<!--                    </dependency>-->
<!--                </dependencies>-->
<!--            </plugin>-->

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-scm-publish-plugin</artifactId>
                <version>${maven-scm-publish-plugin.version}</version>
                <configuration>
                    <scmBranch>gh-pages</scmBranch>
                    <content>${project.build.directory}/site</content>
                    <skipCheckin>${github.site.upload.skip}</skipCheckin>
                </configuration>
                <executions>
                    <execution>
                        <id>publish-scm</id>
                        <goals>
                            <goal>publish-scm</goal>
                        </goals>
                        <phase>post-site</phase>
                    </execution>
                </executions>
            </plugin>

<!--            <plugin>-->
<!--                <groupId>org.codehaus.mojo</groupId>-->
<!--                <artifactId>animal-sniffer-maven-plugin</artifactId>-->
<!--                <version>1.24</version>-->
<!--                <executions>-->
<!--                    <execution>-->
<!--                        <id>check-java-version</id>-->
<!--                        <phase>compile</phase>-->
<!--                        <goals>-->
<!--                            <goal>check</goal>-->
<!--                        </goals>-->
<!--                        <configuration>-->
<!--                            <signature>-->
<!--                                <groupId>org.codehaus.mojo.signature</groupId>-->
<!--                                <artifactId>java18</artifactId>-->
<!--                                <version>1.0</version>-->
<!--                            </signature>-->
<!--                        </configuration>-->
<!--                    </execution>-->
<!--                </executions>-->
<!--            </plugin>-->
        </plugins>
    </build>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-bom</artifactId>
                <version>${log4j2.version}</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>

            <dependency>
                <groupId>org.junit</groupId>
                <artifactId>junit-bom</artifactId>
                <version>${junit5.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-bom</artifactId>
                <version>${netty-bom.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>

<!--        <dependency>-->
<!--            <groupId>log4j</groupId>-->
<!--            <artifactId>log4j</artifactId>-->
<!--            <version>${log4j.version}</version>-->
<!--            <scope>provided</scope>-->
<!--        </dependency>-->

        <!-- log4j2 START -->

        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
            <version>${log4j2.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>${log4j2.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core-test</artifactId>
            <version>${log4j2.version}</version>
            <scope>test</scope>
        </dependency>

<!--        <dependency>-->
<!--            <groupId>org.apache.logging.log4j</groupId>-->
<!--            <artifactId>log4j-core</artifactId>-->
<!--            <version>${log4j2.version}</version>-->
<!--            <type>test-jar</type>-->
<!--            <scope>test</scope>-->
<!--        </dependency>-->

        <dependency>
            <groupId>com.lmax</groupId>
            <artifactId>disruptor</artifactId>
            <version>4.0.0</version>
            <scope>test</scope>
        </dependency>

        <!-- log4j2 END -->
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${logback-classic.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j-api.version}</version>
            <scope>provided</scope>
        </dependency>

        <!-- Test -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>${junit5.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-params</artifactId>
            <version>${junit5.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${junit5.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- Sadly we need this for now because of https://github.com/testcontainers/testcontainers-java/issues/970 :/ -->
        <!-- https://mvnrepository.com/artifact/org.junit.vintage/junit-vintage-engine -->
        <!-- and we need it here because something else lower has a lower dep ver. -->
        <dependency>
            <groupId>org.junit.vintage</groupId>
            <artifactId>junit-vintage-engine</artifactId>
            <version>${junit5.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>${assertj.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>${mockito.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-junit-jupiter</artifactId>
            <version>${mockito.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-all</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson.version}</version>
            <scope>test</scope>
        </dependency>


        <!-- Redis Client -->
        <dependency>
            <groupId>redis.clients</groupId>
            <artifactId>jedis</artifactId>
            <version>${jedis.version}</version>
            <optional>true</optional>
        </dependency>

        <!-- Kafka Client -->
        <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>kafka-clients</artifactId>
            <version>${kafka-clients.version}</version>
            <optional>true</optional>
        </dependency>

        <!-- kafka-junit dependency -->
        <dependency>
            <groupId>com.github.charithe</groupId>
            <artifactId>kafka-junit</artifactId>
            <version>${kafka-junit.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-pool2</artifactId>
            <version>${commons-pool2.version}</version>
            <optional>true</optional>
        </dependency>

        <!--JBoss Logging -->
        <dependency>
            <groupId>org.jboss.logmanager</groupId>
            <artifactId>jboss-logmanager</artifactId>
            <version>${org.jboss.logmanager.version}</version>
            <scope>provided</scope>
        </dependency>

        <!-- Arquillian integration test -->
<!--        <dependency>-->
<!--            <groupId>org.jboss.arquillian.junit</groupId>-->
<!--            <artifactId>arquillian-junit-container</artifactId>-->
<!--            <scope>test</scope>-->
<!--        </dependency>-->

<!--        <dependency>-->
<!--            <groupId>org.jboss.shrinkwrap.resolver</groupId>-->
<!--            <artifactId>shrinkwrap-resolver-impl-maven</artifactId>-->
<!--            <scope>test</scope>-->
<!--        </dependency>-->

<!--        <dependency>-->
<!--            <groupId>org.jboss.shrinkwrap.descriptors</groupId>-->
<!--            <artifactId>shrinkwrap-descriptors-impl-javaee</artifactId>-->
<!--            <scope>test</scope>-->
<!--        </dependency>-->

<!--        <dependency>-->
<!--            <groupId>org.wildfly.core</groupId>-->
<!--            <artifactId>wildfly-cli</artifactId>-->
<!--            <version>10.0.0.Beta2</version>-->
<!--            <scope>test</scope>-->
<!--        </dependency>-->

        <dependency>
            <groupId>org.bouncycastle</groupId>
            <artifactId>bcprov-jdk18on</artifactId>
            <version>${bouncycastle.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.bouncycastle</groupId>
            <artifactId>bcpkix-jdk18on</artifactId>
            <version>${bouncycastle.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.testcontainers/testcontainers -->
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>testcontainers</artifactId>
            <version>${testcontainers.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>${testcontainers.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.19.0</version>
        </dependency>

        <!--        <dependency>-->
<!--            <groupId>com.google.code.tempus-fugit</groupId>-->
<!--            <artifactId>tempus-fugit</artifactId>-->
<!--            <version>${tempus-fugit.version}</version>-->
<!--            <scope>test</scope>-->
<!--            <exclusions>-->
<!--                <exclusion>-->
<!--                    <groupId>org.hamcrest</groupId>-->
<!--                    <artifactId>hamcrest-core</artifactId>-->
<!--                </exclusion>-->
<!--            </exclusions>-->
<!--        </dependency>-->




    </dependencies>

    <reporting>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>${maven-javadoc-plugin.version}</version>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-project-info-reports-plugin</artifactId>
                <version>${maven-project-info-reports-plugin.version}</version>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>index</report>
                            <report>plugin-management</report>
                            <report>distribution-management</report>
                            <report>dependency-info</report>
                            <report>dependencies</report>
                            <report>scm</report>
                            <report>issue-management</report>
                            <report>ci-management</report>
                            <report>dependency-management</report>
                            <report>team</report>
                            <report>summary</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
        </plugins>
    </reporting>

    <profiles>
        <profile>
            <id>sonatype-oss-snapshot</id>
            <distributionManagement>
                <snapshotRepository>
                    <id>sonatype</id>
                    <url>https://oss.sonatype.org/content/repositories/snapshots</url>
                </snapshotRepository>
            </distributionManagement>
        </profile>
        <profile>
            <id>sonatype-oss-release</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <skip>true</skip>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <configuration>
                            <skip>true</skip>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>coverage</id>
            <activation>
                <jdk>[1.7,1.8]</jdk>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                        <version>${maven.jacoco.version}</version>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>prepare-agent</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>report</id>
                                <phase>test</phase>
                                <goals>
                                    <goal>report</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>


        <profile>
            <id>jmh</id>

            <dependencies>
                <dependency>
                    <groupId>org.openjdk.jmh</groupId>
                    <artifactId>jmh-core</artifactId>
                    <version>1.21</version>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.openjdk.jmh</groupId>
                    <artifactId>jmh-generator-annprocess</artifactId>
                    <version>1.21</version>
                    <scope>test</scope>
                </dependency>
            </dependencies>

            <build>
                <resources>
                    <resource>
                        <directory>src/test/resources</directory>
                    </resource>
                </resources>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>build-helper-maven-plugin</artifactId>
                        <version>3.0.0</version>
                        <executions>
                            <execution>
                                <id>add-source</id>
                                <goals>
                                    <goal>add-test-source</goal>
                                </goals>
                                <configuration>
                                    <sources>
                                        <source>src/perf/java</source>
                                    </sources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>1.6.0</version>
                        <executions>
                            <execution>
                                <id>run-benchmarks</id>
                                <phase>integration-test</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>java</executable>
                                    <classpathScope>test</classpathScope>
                                    <arguments>
                                        <argument>-classpath</argument>
                                        <classpath />
                                        <argument>org.openjdk.jmh.Main</argument>
                                        <argument>-f</argument>
                                        <argument>1</argument>
                                        <argument>-wf</argument>
                                        <argument>0</argument>
                                        <argument>-i</argument>
                                        <argument>5</argument>
                                        <argument>-wi</argument>
                                        <argument>1</argument>
                                        <argument>.*</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
